name: Deploy to Staging Server

on:
  push:
    branches:
      - staging

jobs:
  # 1️⃣ Build Job
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js (v20)
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Using Node.js v20.x.x

      - name: Install dependencies
        run: |
          npm install  # Install all dependencies from package.json

      - name: Build Next.js app
        run: |
          npm run build  # Build the Next.js application (output in .next/)

      - name: Archive build artifacts
        run: |
          mkdir -p build-artifacts
          cp -r .next public package.json package-lock.json build-artifacts/  # Archive necessary files

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3  # Latest version of upload artifact
        with:
          name: build-artifacts
          path: build-artifacts/

  # 2️⃣ Deploy Job (Depends on Build)
  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure that this job runs only after the build job is successful

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2  # Use latest download artifact
        with:
          name: build-artifacts

      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_GITHUB_AWS }}  # SSH key to connect to the server

      - name: Copy build files to server
        run: |
          scp -r build-artifacts/* githubactions@${{ secrets.AWS_stage_server_1_IP }}:/var/www/Project1/HalaSkyFrontend/  # Copy built files

      - name: Restart Next.js on server
        run: |
          ssh githubactions@${{ secrets.AWS_stage_server_1_IP }} << 'EOF'
            cd /var/www/Project1/HalaSkyFrontend
            # Restart the Next.js app using pm2 (or replace with your process manager)
            pm2 restart halasky-frontend || pm2 start npm --name "halasky-frontend" -- start  # Restart the app or start it
          EOF
